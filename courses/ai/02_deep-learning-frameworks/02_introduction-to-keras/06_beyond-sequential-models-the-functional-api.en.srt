1
00:00:01,410 --> 00:00:04,897
In this video,
we're going to talk about more general,

2
00:00:04,897 --> 00:00:08,613
non-sequential models in Keras
using the functional API.

3
00:00:13,505 --> 00:00:15,800
So there is two types of models in Keras.

4
00:00:15,800 --> 00:00:17,930
We've seen the sequential already.

5
00:00:17,930 --> 00:00:20,045
There is another type called model,

6
00:00:20,045 --> 00:00:25,495
which you would use if you were
in need of non-sequential models.

7
00:00:25,495 --> 00:00:29,360
Once defined, and we will see
how to do that in just a second.

8
00:00:29,360 --> 00:00:33,150
The model can be trained and
evaluated exactly like sequential models.

9
00:00:33,150 --> 00:00:35,780
So you don't have to learn
anything about that part.

10
00:00:39,120 --> 00:00:44,139
Using the functional API,
you would usually start with model and

11
00:00:44,139 --> 00:00:46,980
configuring one or several inputs.

12
00:00:48,470 --> 00:00:52,631
Once you have those inputs defined,
we define transformations for

13
00:00:52,631 --> 00:00:56,283
those inputs, until you arrive at one or
several outputs.

14
00:00:58,426 --> 00:01:00,660
So let's look at an example.

15
00:01:00,660 --> 00:01:05,280
This is an example we kind of have
already seen using the sequential model.

16
00:01:05,280 --> 00:01:10,330
Mainly we do predictions of
100 predictions using amnest.

17
00:01:12,330 --> 00:01:13,880
We've got two layers here first.

18
00:01:14,960 --> 00:01:18,640
First one is Dense time layers
which we have already seen and

19
00:01:18,640 --> 00:01:24,310
the second one is a new
layer type called Input.

20
00:01:24,310 --> 00:01:27,124
On top of that,
we import our new model class.

21
00:01:29,578 --> 00:01:34,090
As before, we define the number of classes
as 10 because we have 10 digits here.

22
00:01:35,610 --> 00:01:39,752
And we define an input layer of shape 784,

23
00:01:39,752 --> 00:01:43,465
which is of vector shape length 784.

24
00:01:46,121 --> 00:01:52,709
Then what we do next is new,
we define a Dense of output dimension 512,

25
00:01:52,709 --> 00:01:58,152
but instead of simply defining it,
we call it on our inputs.

26
00:01:58,152 --> 00:02:04,170
So we define x as a Dense
layer applied to our inputs.

27
00:02:04,170 --> 00:02:09,710
So what that means is, every layer
in Keras, actually, every model for

28
00:02:09,710 --> 00:02:15,780
that purpose can be called in tensors
to output tensors, and we do that here.

29
00:02:15,780 --> 00:02:18,850
So this is part of the functional API.

30
00:02:18,850 --> 00:02:20,428
We can do this step again and

31
00:02:20,428 --> 00:02:26,150
apply our intermediary x to a Dense
layer again to arrive at yet another x.

32
00:02:27,330 --> 00:02:32,200
Finally, we can do this a third time,
this time with the number of classes

33
00:02:32,200 --> 00:02:36,230
as output dimension to
arrive at our predictions.

34
00:02:36,230 --> 00:02:41,310
So this procedure of calling
layers on different inputs,

35
00:02:41,310 --> 00:02:46,870
you can do that in any fashion, and
slowly build up very complicated models.

36
00:02:47,900 --> 00:02:52,475
Now, to initialize and
run a model is quite simple,

37
00:02:52,475 --> 00:02:56,520
you simply specify the inputs and
the outputs, that's it.

38
00:02:56,520 --> 00:03:01,413
Compilation step, fitting, evaluating and
so on, it's just the same thing as before.