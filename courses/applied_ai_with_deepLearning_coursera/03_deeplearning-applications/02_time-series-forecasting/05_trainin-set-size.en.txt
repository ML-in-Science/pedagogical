Welcome back. In the last session, we have discussed the importance of the batch-size. So, now, we're going to compute the training-set size based on batch-size. So we have said that the training set must have a size which is divisible by the batch-size without remainder, which means that a modulo of such operations must be zero. Let's try to compute it manually. So, first of all, we compute the length of our entire dataset. This is 7776. In the next step, we are subtracting the test set. Test set will be of 10 percent of the entire data set, and we are getting this number, 6998.4. So, now, if we try to divide this value by the batch-size, we're getting this flow of number. And that indicates that this value is not entirely and not divisible by the batch-size without remainder. So, we can compute modulo. We see a modulo is 24. It's not divisible without remainder. Sorry, 22. Now, we can guess now what the number could be. Actually, I have already taken the correct one, and it's a simple mathematical calculation actually, which can be done manually. And you can see for this number, for the 6976, the modulo is equal zero. So, now, just imagine this scenario. You are trying out several batch-sizes. And every time, you have to compute training can test set size, which is divisible by the batch-size. If you do it manually, it's inefficient and time-consuming. So even if it takes five minutes, so you have every time or three minutes, every time to remember, I have to compute this and write some lines of code. So to do this, we can write a method or function here in Python, which will do it for us. I can write this already here. This function takes three parameters. It takes dataset, it takes batch-size and then takes test set in percent. So, we do following. First of all, we compute the length of the data set, which we have done already here actually in this cell. We have computed lengths, then we subtract from this lengths, the test set lengths. And then we are going to iterate within the range of lengths' and try for every lengths in this range, try to compute modulo, so the length modulo batch-size. And every value which has modulo zero, every value of length in this range, we're going to store in this temporal array, train, lengths, values. And then in the end we're returning just the maximum value from this array. Let's see how it works. So it has found two value here, which are divisible without remainder by the batch-size. This is 6912 and 6976. And this method takes the last one, so the maximum one. And this is our training set length. And this is actually what we needed to do in this session. So stay tuned, until the next time, enjoy our sessions. Bye bye.