1
00:00:00,931 --> 00:00:04,917
In this video,
I will explain how to use SystemML.

2
00:00:04,917 --> 00:00:09,608
We'll walk through full example
program that will explain

3
00:00:09,608 --> 00:00:14,124
how to write a DMS script and
use SystemML's Python API.

4
00:00:14,124 --> 00:00:18,392
First, we'll understand
how to implement a simple,

5
00:00:18,392 --> 00:00:23,070
Hello World and
matrix multiplication example using DML.

6
00:00:23,070 --> 00:00:28,063
The goal of this example
is to understand how to

7
00:00:28,063 --> 00:00:33,321
write a simple DML script and
use ML Context API.

8
00:00:33,321 --> 00:00:38,312
Then we'll move on to a more complicated
example where we will understand how

9
00:00:38,312 --> 00:00:44,360
to implement three different algorithms
to train a linear aggression model.

10
00:00:44,360 --> 00:00:49,836
The goal here is to understand how
System ML enables data scientist

11
00:00:49,836 --> 00:00:55,525
to implement that custom algorithm,
using for this specific uses.

12
00:00:55,525 --> 00:01:00,688
The example, three and four explains,
how a data scientist who

13
00:01:00,688 --> 00:01:06,344
prefers to invoke a pre-implemented
algorithm, can use SystemML.

14
00:01:06,344 --> 00:01:11,615
Finally, we understand how to
drain a simple neural network,

15
00:01:11,615 --> 00:01:13,611
using kiosk to DML API.

16
00:01:13,611 --> 00:01:16,916
You can install SystemML using PIP.

17
00:01:16,916 --> 00:01:20,599
Since I've already installed SystemML,
I will skip this step.

18
00:01:23,532 --> 00:01:29,065
Instead I will check the version SystemML
previously installed on this system.

19
00:01:29,065 --> 00:01:34,733
It shows that I have installed SystemML
1.1, which is currently under development.

20
00:01:39,541 --> 00:01:44,531
SystemML version 1.1 requires park two and
above.

21
00:01:44,531 --> 00:01:51,417
If you are using a different kernel, you
can change the kernel using this option.

22
00:01:58,137 --> 00:02:03,590
In this cell,
we import MLContext class and DML method.

23
00:02:03,590 --> 00:02:09,154
From this system a mini package
we create an American text object

24
00:02:09,154 --> 00:02:14,421
by passing either a spark context or
a spark session object.

25
00:02:14,421 --> 00:02:20,330
Next, we check the version of SystemML
using American text information.

26
00:02:24,413 --> 00:02:27,641
In the next cell, we create a simple d.

27
00:02:29,810 --> 00:02:34,688
We create a simple DML script,
that brings hello word.

28
00:02:34,688 --> 00:02:39,653
Notice DML script object is created
by passing the DMS strength,

29
00:02:39,653 --> 00:02:43,090
to the DML material
being reported earlier.

30
00:02:44,200 --> 00:02:46,028
We then execute the script.

31
00:02:46,028 --> 00:02:50,933
Using American text, execute matter.

32
00:02:50,933 --> 00:02:56,690
Let's say that instead of using system
mms building script print method.

33
00:02:56,690 --> 00:02:58,977
We want to use Python's print method.

34
00:03:03,681 --> 00:03:07,570
In this case, we create a string in DML.

35
00:03:08,930 --> 00:03:14,034
And specify that we want to
fetch that string as an output.

36
00:03:14,034 --> 00:03:20,040
Then we use American text
get method after execution.

37
00:03:23,630 --> 00:03:28,170
Let's load numpy and
sklearn which we'll use in later examples.

38
00:03:35,170 --> 00:03:39,122
Now that we know how to
execute a DMS script and

39
00:03:39,122 --> 00:03:44,219
fetch the output using ML context,
let's understand how

40
00:03:44,219 --> 00:03:49,227
to pass input to SystemML
using ML context input method.

41
00:03:51,920 --> 00:03:59,527
Four, we can yield a random matrix X
with a thousand columns and sparsity .5.

42
00:03:59,527 --> 00:04:05,034
The number of throughs are passed by the
user by the dollar parameter [INAUDIBLE].

43
00:04:05,034 --> 00:04:10,610
We then multiply the matrix X with
the transpose in computer sum.

44
00:04:13,040 --> 00:04:20,224
The pass the value of the dollar parameter
enough, in this case, 1e raised to six.

45
00:04:20,224 --> 00:04:25,780
Using the input method, we now execute
the script using American text.

46
00:04:27,530 --> 00:04:34,913
As you can see, it spawned a spark job
likely to generate a random matrix.

47
00:04:34,913 --> 00:04:38,878
When this job is finished,
the value of s will be greater.

48
00:04:45,606 --> 00:04:46,945
Which is [INAUDIBLE].